
cleoslocal set account permission multichainns active --add-code

eosio-cpp multichainns.cpp -I . -o multichainns.wasm -abigen

cleoslocal set contract multichainns ../multichainns -p multichainns@active

cleoslocal -v push action multichainns cleardata '["table_name"]' -p multichainns@active

cleoslocal get table multichainns multichainns globalvars
cleoslocal get table multichainns multichainns globalparams
cleoslocal get table multichainns multichainns prikeys

# 下面是上线时需要执行的初始化操作：（标记为测试时使用的不做）

# 初始化全局变量表
cleoslocal get table multichainns multichainns globalvars
cleoslocal -v push action multichainns initgvarstbl '[]' -p multichainns@active
cleoslocal get table multichainns multichainns globalvars
cleoslocal get table multichainns multichainns prikeys

cleoslocal -v push action multichainns addallgvars  '[]' -p multichainns@active  # 测试时使用
cleoslocal get table multichainns multichainns globalvars                        # 测试时使用

# 初始化全局参数表
cleoslocal get table multichainns multichainns globalparams
cleoslocal -v push action multichainns initgprmstbl '[]' -p multichainns@active
cleoslocal get table multichainns multichainns globalparams
cleoslocal get table multichainns multichainns prikeys

cleoslocal -v push action multichainns setallowedxy '[1, 81]' -p multichainns@active    # 生产使用。测试时，需要在全局参数表初始化以前进行一下前段测试，然后再进行后段测试
cleoslocal -v push action multichainns setallowedxy '[2, 82]' -p multichainns@active    # 生产使用。测试时，需要在全局参数表初始化以前进行一下前段测试，然后再进行后段测试
cleoslocal -v push action multichainns setallowedxy '[3, 83]' -p multichainns@active    # 生产使用。测试时，需要在全局参数表初始化以前进行一下前段测试，然后再进行后段测试

cleoslocal -v push action multichainns setmaxnumorh '[90]'    -p multichainns@active    # 生产使用。测试时，需要在全局参数表初始化以前进行一下前段测试，然后再进行后段测试



